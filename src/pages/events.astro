---
import { slide } from "astro:transitions";
import EventCard from "../components/EventCard.astro";
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";
const upcomingEvents = await getCollection("events", ({ data }) => {
    const eventDate = new Date(data.date);
    const today = new Date();
    return eventDate >= today;
});
upcomingEvents.sort((a, b) => { // Sort by date
    const aDate = new Date(a.data.date);
    const bDate = new Date(b.data.date);
    return bDate.getTime() - aDate.getTime();
});

const previousEvents = await getCollection("events", ({ data }) => {
    const eventDate = new Date(data.date);
    const today = new Date();
    return eventDate < today;
});
previousEvents.sort((a, b) => { // Sort by date
    const aDate = new Date(a.data.date);
    const bDate = new Date(b.data.date);
    return bDate.getTime() - aDate.getTime();
});
---
<Layout title="Events - CPP Japanese Language Learners">
    <div class="my-16 md:max-w-4xl mx-auto flex flex-col">
        <!-- Events -->
        <div class="flex flex-col my-6 mx-6">
            <div class="breadcrumbs text-accent mb-4">
                <ul>
                    <li><a href="/">Home</a></li>
                    <li>Events</li>
                </ul>
            </div>
            <h1 transition:animate={slide ({ duration: '0.3s' })} class="text-5xl font-bold text-accent mb-4 font-display">Upcoming Events</h1>
            <div>
                <!-- { <EventCard class="md:card-side" event={upcomingEvents[0]} soonest /> }  -->
                { upcomingEvents[0] ? <EventCard class="md:card-side" event={upcomingEvents[0]} soonest /> : <p class="text-accent">No upcoming events.</p> }
            </div>
            <div class="columns sm:columns-2">
                {
                    upcomingEvents.map((event) => 
                        event !== upcomingEvents[0] && <EventCard event={event} />
                    )
                }
            </div>
        </div>
        <div class="flex flex-col my-6 mx-6">
            <h1 transition:animate={slide ({ duration: '0.5s' })} class="text-5xl font-bold text-accent mb-4 font-display">Previous Events</h1>
            <div class="columns sm:columns-2">
                {
                    previousEvents.map((event) => (
                        <EventCard event={event} />
                    ))
                }
            </div>
        </div>
    </div>
</Layout>
<style>
    @media (prefers-color-scheme: dark) {
        body {
            background-color: #ffffff;
        }
    }
</style>