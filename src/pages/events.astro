---
import { slide } from "astro:transitions";
import EventCard from "../components/EventCard.astro";
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";
const upcomingEvents = await getCollection("events", ({ data }) => {
  const eventDate = new Date(data.date);
  const today = new Date();
  return eventDate >= today;
});
upcomingEvents.sort((a, b) => {
  // Sort by date
  const aDate = new Date(a.data.date);
  const bDate = new Date(b.data.date);
  return aDate.getTime() - bDate.getTime();
});

const previousEvents = await getCollection("events", ({ data }) => {
  const eventDate = new Date(data.date);
  const today = new Date();
  return eventDate < today;
});
previousEvents.sort((a, b) => {
  // Sort by date
  const aDate = new Date(a.data.date);
  const bDate = new Date(b.data.date);
  return bDate.getTime() - aDate.getTime();
});
---

<Layout title="Events - CPP Japanese Language Learners">
  <div class="mb-16 md:max-w-4xl mx-auto flex flex-col">
    <!-- Events -->
    <div class="flex flex-col mt-12 mb-6 mx-6">
      <div class="breadcrumbs mb-4">
        <ul>
          <li><a href="/">Home</a></li>
          <li>Events</li>
        </ul>
      </div>
      <h1
        transition:animate={slide({ duration: "0.3s" })}
        class="text-5xl font-bold mb-4 font-display"
      >
        Upcoming Events
      </h1>
      <!-- No upcoming events case -->
      <div class=`${upcomingEvents.length === 0 ? "flex flex-col" : "hidden"}`>
        <h2 class="mb-4">No upcoming events. Stay tuned! ٩(๑´∀ `๑ )</h2>
      </div>
      <!-- Render upcoming events in a single column on smaller devices -->
      <div
        class={`${upcomingEvents.length != 0 ? "flex flex-col items-center" : "hidden"} sm:hidden`}
      >
        {upcomingEvents.map((event) => <EventCard event={event} />)}
      </div>
      <!-- One upcoming event case -->
      <div
        class=`${upcomingEvents.length === 1 ? "flex flex-col items-center" : "hidden"}`
      >
        {
          upcomingEvents[0] ? (
            <EventCard event={upcomingEvents[0]} soonest />
          ) : null
        }
      </div>
      <!-- Multiple upcoming events case -->
      <div
        class={`${upcomingEvents.length > 1 ? "hidden sm:grid grid-cols-2 gap-4" : "hidden"}`}
      >
        {upcomingEvents.map((event) => <EventCard event={event} />)}
      </div>
    </div>
    <!-- Previous Events -->
    <div class="flex flex-col my-6 mx-6">
      <h1
        transition:animate={slide({ duration: "0.5s" })}
        class="text-5xl font-bold mb-4 font-display"
      >
        Previous Events
      </h1>
      <!-- Single column on smaller devices, two column grid on larger screens -->
      <div class="flex flex-col sm:grid sm:grid-cols-2 sm:gap-4">
        {previousEvents.map((event) => <EventCard event={event} />)}
      </div>
    </div>
  </div>
</Layout>
